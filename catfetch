#!/bin/sh
# CATFETCH
# by CatMeowByte

# Configuration
# ========

# Icon character width (0 to disable icon)
ICON_WIDTH=2

# Draw icon background
ICON_BACKGROUND=true

# Draw icon here
# Space means off, any other character means on
ICON_BIT=$(cat << ========
             
   #     #   
    #   #    
   #######   
  ## ### ##  
 # ####### # 
 # ####### # 
 # #     # # 
    ## ##    
             
========
)

# Space between icon and info
SPACER_WIDTH=2

# Color bar width
COLOR_BAR_WIDTH=3

# Choose the accent color by name (e.g. RED, LIGHT_BLUE, etc.)
COLOR_ACCENT_NAME="YELLOW"


# Script
# ========
BLACK="\033[30m"
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
MAGENTA="\033[35m"
CYAN="\033[36m"
WHITE="\033[37m"

LIGHT_BLACK="\033[90m"
LIGHT_RED="\033[91m"
LIGHT_GREEN="\033[92m"
LIGHT_YELLOW="\033[93m"
LIGHT_BLUE="\033[94m"
LIGHT_MAGENTA="\033[95m"
LIGHT_CYAN="\033[96m"
LIGHT_WHITE="\033[97m"

# filter out libselinux warning on AppImage
sed() {
  command sed "$@" 2>&1 | grep -v 'libselinux.so.1'
}

BOLD="\033[1m"
RESET="\033[0m"

COLOR_ACCENT=$(eval echo "\$$COLOR_ACCENT_NAME")
COLOR_ACCENT_BG="\033[4${COLOR_ACCENT#*\[3}"

USER_HOST="${USER}@$(hostname)"
# SEPARATOR=$(printf '%*s' "${#USER_HOST}" | tr ' ' '-')

COLOR_BAR_1=$(for c in $(seq 30 37); do printf "\033[${c}m%0.s█" $(seq $COLOR_BAR_WIDTH); done; printf "\033[0m\n")
COLOR_BAR_2=$(for c in $(seq 90 97); do printf "\033[${c}m%0.s█" $(seq $COLOR_BAR_WIDTH); done; printf "\033[0m\n")

INFO_SYSTEM="$(grep '^PRETTY_NAME=' /etc/os-release 2>/dev/null | cut -d= -f2 | tr -d '"') $(uname -m)"
INFO_KERNEL=$(uname -r)
INFO_LIBC="$(getconf GNU_LIBC_VERSION 2>/dev/null | awk '{print $2}')"
INFO_SHELL="$(${SHELL:-sh} --version 2>/dev/null | head -n 1 | awk '{print $1, $2}')"
INFO_CPU=$(grep -m1 'model name' /proc/cpuinfo | cut -d ':' -f2- | sed 's/^ //')
INFO_GPU=$(lspci | awk '/VGA compatible controller|3D controller|Display controller/' \
  | cut -d ':' -f3- \
  | sed 's/^ //' \
  | sed -E \
    -e 's/ Corporation//g' \
    -e 's/ Inc\.//g' \
    -e 's/ Integrated Graphics Controller//g' \
    -e 's/ \(rev .*//g' \
    -e 's/  */ /g' \
    -e 's/^ *//' -e 's/ *$//' \
    -e 's/\[(([^] ]+ ){0,3}[^] ]+)[^]]*\]/[\1]/' \
  )

INFO_LINES=$(cat << EOF
${BOLD}${COLOR_ACCENT_BG}${BLACK} ${USER} @ $(hostname) ${RESET}
${BOLD}${WHITE}System${RESET} : ${INFO_SYSTEM}
${BOLD}${WHITE}Kernel${RESET} : ${INFO_KERNEL} LibC ${INFO_LIBC}
${BOLD}${WHITE}Shell${RESET}  : ${INFO_SHELL}
${BOLD}${WHITE}CPU${RESET}    : ${INFO_CPU}
${BOLD}${WHITE}GPU${RESET}    : ${INFO_GPU}
EOF
)

IFS='
'
set -f
ICON_LINES=$(printf "%s\n" "$ICON_BIT")

ICON_HEIGHT=$(printf "%s\n" "$ICON_LINES" | wc -l)
INFO_HEIGHT=$(printf "%s\n" "$INFO_LINES" | wc -l)

i=0
while [ "$i" -lt "$ICON_HEIGHT" ] || [ "$i" -lt "$INFO_HEIGHT" ]; do
  icon=""
  if [ "$i" -lt "$ICON_HEIGHT" ] && [ "$ICON_WIDTH" -gt 0 ]; then
    line=$(printf "%s\n" "$ICON_LINES" | sed -n "$((i + 1))p")
    j=0
    len=${#line}
    while [ "$j" -lt "$len" ]; do
      char=$(printf '%s' "$line" | cut -c $((j + 1)))
      k=0
      while [ "$k" -lt "$ICON_WIDTH" ]; do
        if [ "$char" = " " ]; then
          [ "$ICON_BACKGROUND" = "true" ] && icon="${icon}░" || icon="${icon} "
        else
          icon="${icon}█"
        fi
        k=$((k + 1))
      done
      j=$((j + 1))
    done
  fi

  info=$(printf "%s\n" "$INFO_LINES" | sed -n "$((i + 1))p")

  if [ "$i" -eq $((ICON_HEIGHT - 2)) ]; then
    info=$COLOR_BAR_1
  elif [ "$i" -eq $((ICON_HEIGHT - 1)) ]; then
    info=$COLOR_BAR_2
  fi

  spacer=$(printf "%*s" "$SPACER_WIDTH" "")
  printf "%s%s%b\n" "$icon" "$spacer" "$info"

  i=$((i + 1))
done
